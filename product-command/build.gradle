group 'org.micro.commerce'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
        gradleDockerVersion = '1.2'

        springCloudVersion = '1.3.1.RELEASE'
        springKafkaVersion = '1.3.0.M2'

        junitVersion = '4.12'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/libs-milestone' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-config:${springCloudVersion}"
    }
}

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]

    compile("org.springframework:spring-tx")

    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile(group: 'org.springframework.kafka', name: 'spring-kafka', version: "${springKafkaVersion}")

    testCompile(group: 'junit', name: 'junit', version: "${junitVersion}")
    testCompile(group: 'org.springframework.kafka', name: 'spring-kafka', version: "${springKafkaVersion}")
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}